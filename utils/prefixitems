#!/usr/bin/env python3
##########################################################################
# Copyright (c) 2014 - 2017, 2018 Timothy Savannah All Rights Reserved
#
#  Licensed under terms of the LGPLv2
#
#########################################


import os
import sys

def printUsage():
    sys.stderr.write('''Usage: prefixitems (-f) (-l) [prefix] [items...]
 Prefix all items with then given prefix.

  Options:
  
    --help or --sau-help\t- Print this message

  Modes:

    -f      \t\t- If provided, items will be treated as one or more filenames
    -l      \t\t- If provided, items will be printed one per line

''')

if __name__ == '__main__':

    args = sys.argv[1:]

    if not args:
        printUsage()
        sys.exit(1)

    helpArgs = [arg for arg in args if arg in ('--help', '--sau-help')]
    if helpArgs:
        printUsage()
        sys.exit(0)
    del helpArgs


    if '-f' in args:
        args.remove('-f')
        isFiles = True
    else:
        isFiles = False

    if '-l' in args:
        args.remove('-l')
        joinChar = '\n'
    else:
        joinChar = ' '

    if len(args) < 2:
        sys.stderr.write('Not enough arguments.\n')
        printUsage()
        sys.exit(1)

    prefix = args[0]

    if isFiles is True:
        items = []
        for fname in args[1:]:
            if not os.path.isfile(fname):
                sys.stderr.write('File "%s" does not exist or is not a file.\n' %(fname,))
                sys.exit(2)
            with open(fname, 'rt') as f:
                contents = f.read()
            lines = contents.split('\n')
            if lines[-1] == '':
                lines = lines[:-1]
            items += lines
    else:
        items = args[1:]


    sys.stdout.write(joinChar.join([prefix + item for item in items]))
    sys.stdout.write('\n')
